---
import Layout from '../layouts/Layout.astro';
import {
  getLangFromUrl,
  useTranslations,
  useTranslatedPath,
} from '../i18n/utils';
import languages from '../i18n/languages';
import Header from '../components/organisms/Header.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

/* const getTime = () => {
  return `${getTimeNow.getHours().toString()}:${getTimeNow.getMinutes().toString()}:${getTimeNow.getSeconds().toString()}`;
}; */
---

<script>
  const clockElelment = document.querySelector('#clock');
  setInterval(() => {
    const getTimeNow = new Date();
    clockElelment!.innerHTML = getTimeNow.toLocaleTimeString([], {
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit',
    });
  }, 1000);
</script>

<Layout title="Welcome to Astro.">
  <Header />
  <div class="relative overflow-hidden mt-14 h-[calc(100vh-3.5rem)]">
    <div class="bg-image h-full bg-fixed"></div>

    <div class="absolute w-full h-full top-0 flex flex-col justify-between">
      <!--Rectangle de carré -->
      <div class="w-full flex items-center flex-col">
        <div
          class="mt-10 w-full md:w-[55%] grid grid-cols-4 grid-rows-2 md:text-2xl"
        >
          <p>Laurent-P.</p>
          <p class="col-start-3 text-center">World</p>
          <p class="justify-self-end">Time</p>
          <p>000000</p>
          <p class="text-center">
            <i class="fa-solid fa-mug-hot cafe-shadow text-[#DE421C] mr-1"
            ></i>x5
          </p>
          <p class="text-center">1-1</p>
          <p id="clock" class="justify-self-end">
            {
              new Date().toLocaleTimeString([], {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false,
              })
            }
          </p>
        </div>
        <div
          class="text-shadow flex flex-col justify-center md:w-6/12 bg-[#DE421C] border-black border-t-orange-300 border-l-orange-300 border-4 text-orange-300 p-3"
        >
          <div class="flex justify-between">
            <span
              class="w-2 h-2 block bg-[#DE421C] border-black border-t-orange-300 border-l-orange-300 border-4"
            ></span>
            <span
              class="w-2 h-2 block bg-[#DE421C] border-black border-t-orange-300 border-l-orange-300 border-4"
            ></span>
          </div>
          <p class="text-5xl md:text-7xl">Super</p>
          <p class="text-7xl md:text-8xl">Laurent-Philippe Caron</p>
          <div class="flex justify-between">
            <span
              class="w-2 h-2 block bg-[#DE421C] border-black border-t-orange-300 border-l-orange-300 border-4"
            ></span>
            <span
              class="w-2 h-2 block bg-[#DE421C] border-black border-t-orange-300 border-l-orange-300 border-4"
            ></span>
          </div>
        </div>
        <p
          class="text-2xl place-content-start w-full md:w-6/12 text-end text-white"
        >
          ©{new Date().getFullYear()} Laurent-P. Caron
        </p>
      </div>
      <!-- Appel à l'action -->
      <a
        class="w-fit text-center mx-auto flex flex-col justify-center text-white mb-14 text-5xl"
        href="#"
      >
        <span class="underline">Start</span>
        <span class="mt-2 animate-bounce"
          ><i class="fa-solid fa-angle-down"></i></span
        >
      </a>
    </div>
  </div>

  <!-- <p>langue: {lang}</p>
  <p>UI:{t('ui.test')}</p>
  <p>Hero:{t('hero.test')}</p>

  <ul>
    {
      Object.entries(languages).map(([lang, label]) => (
        <li>
          <a href={translatePath('/', lang)}>{label}</a>
        </li>
      ))
    }
  </ul> -->
</Layout>

<style lang="scss" scoped>
  .text-shadow {
    text-shadow: 0px 5px black;
  }

  .cafe-shadow {
    text-shadow: 2px 2px black;
    animation: color-transition 1.5s linear infinite alternate;
  }

  .bg-image {
    width: 5760px;
    background: url('../img/hero-bg.png') repeat-x;
    animation: slide-bg 60s linear infinite;
  }

  @keyframes slide-bg {
    0% {
      transform: translate3d(0, 0, 0);
    }
    100% {
      transform: translate3d(-1920px, 0, 0);
    }
  }

  @keyframes color-transition {
    0% {
      @apply text-[#DE421C];
    }
    100% {
      @apply text-orange-300;
    }
  }
</style>
