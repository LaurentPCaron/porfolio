---
import { eType } from '../../types/IProjectLinkIcon'
import type { AstroComponentFactory } from 'astro/runtime/server/render/astro/index.js'
import Tag from '../atoms/Tag.astro'
import ProjectLink from '../atoms/ProjectLink.astro'
interface Props {
	title: string
	image: string
	links: { type: eType; url: string }[]
	technologies: string[]
	Content: AstroComponentFactory
}
const { title, image, links, technologies, Content } = Astro.props
---

<div class="card w-full overflow-hidden rounded-md bg-zinc-800 shadow-md md:flex md:h-80">
	<!--Image -->
	<div class="trapeze h-48 w-full md:h-auto md:w-3/12">
		<img class="h-full w-full object-cover" src={image} alt="" />
	</div>

	<!--Content -->
	<div class="my-4 px-5 md:w-9/12">
		<div class="flex h-full flex-col gap-3">
			<h3>{title}</h3>
			<div class="flex flex-wrap gap-5 text-xl text-gray-500">
				{links.map(({ type, url }) => <ProjectLink type={type} url={url} />)}
			</div>
			<span class="block h-1 w-12 rounded-full bg-white"></span>

			<div class="md:h-2/4 md:overflow-y-auto">
				<Content />
			</div>

			<!--Tags -->
			<div class="flex flex-wrap gap-8">
				{technologies.map((t) => <Tag label={t} />)}
			</div>
		</div>
	</div>
</div>

<style lang="scss" scoped>
	@screen md {
		.card .trapeze {
			clip-path: polygon(0% 100%, 0% 0%, 100% 0%, 85% 100%);
		}
		.card:nth-child(2) .trapeze {
			order: 1;
			clip-path: polygon(0% 100%, 15% 0%, 100% 0%, 100% 100%);
		}
	}
</style>
